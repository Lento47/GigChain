events {
    worker_connections 1024;
}

http {
    # CORS allowlist for development/frontends
    # Only allow known dev origins; others get no CORS headers
    map $http_origin $cors_origin {
        default "";
        ~^https?://localhost:3000$        $http_origin;
        ~^https?://localhost:5173$        $http_origin;
        ~^http://127\.0\.0\.1:3000$     $http_origin;
        ~^http://127\.0\.0\.1:5173$     $http_origin;
    }
    upstream gigchain_api {
        server gigchain-api:5000;
    }

    # Rate limiting configuration
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=global:10m rate=100r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;

    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Body size limits
    client_max_body_size 10M;
    client_body_buffer_size 128k;

    server {
        listen 80;
        server_name localhost;

        # Comprehensive Security Headers
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
        add_header X-Permitted-Cross-Domain-Policies "none" always;
        
        # Content Security Policy (adjust for your needs)
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://rpc-amoy.polygon.technology https://polygon-rpc.com; frame-ancestors 'none';" always;

        # Connection limit
        limit_conn addr 10;

        # API routes
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            limit_req zone=global burst=100;
            
            proxy_pass http://gigchain_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers (allowlist)
            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Vary Origin always;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin $cors_origin always;
                add_header Vary Origin always;
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
                add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 200;
            }
        }

        # Health check
        location /health {
            proxy_pass http://gigchain_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Default route
        location / {
            return 404;
        }
    }

    # HTTPS configuration (uncomment and configure for production)
    # server {
    #     listen 443 ssl http2;
    #     server_name your-domain.com;
    #     
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     
    #     # SSL configuration
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     ssl_session_timeout 1d;
    #     ssl_session_cache shared:MozSSL:10m;
    #     ssl_session_tickets off;
    #     
    #     # HSTS (HTTP Strict Transport Security) - only for HTTPS
    #     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    #     
    #     # Include all security headers and location blocks from HTTP server
    # }
}
